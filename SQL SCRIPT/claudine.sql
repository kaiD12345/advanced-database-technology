CREATE TABLE Product (
    ProductID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ProductName VARCHAR2(100) NOT NULL,
    BeverageType VARCHAR2(50) NOT NULL,
    PackagingType VARCHAR2(30) CHECK (PackagingType IN ('Bottle', 'Can', 'Carton')),
    VolumeLiters NUMBER(5,2) CHECK (VolumeLiters > 0),
    PricePerUnit NUMBER(10,2) CHECK (PricePerUnit >= 0),
    QuantityInStock NUMBER DEFAULT 0 CHECK (QuantityInStock >= 0),
    Category VARCHAR2(50)
);
CREATE TABLE Batch (
    BatchID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ProductID NUMBER NOT NULL,
    BatchCode VARCHAR2(50) UNIQUE NOT NULL,
    ProductionDate DATE NOT NULL,
    ExpiryDate DATE,
    QuantityProduced NUMBER CHECK (QuantityProduced > 0),
    IsDistributed CHAR(1) DEFAULT 'N' CHECK (IsDistributed IN ('Y', 'N')),
    Notes VARCHAR2(200),
    DateRecorded DATE DEFAULT SYSDATE,
    product FOREIGN KEY (ProductID)
        REFERENCES Product(ProductID)
);
CREATE TABLE Distributor (
    DistributorID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DistributorName VARCHAR2(100) NOT NULL,
    ContactPerson VARCHAR2(100),
    PhoneNumber VARCHAR2(20),
    Email VARCHAR2(100),
    Region VARCHAR2(50) CHECK (Region IN ('Kigali', 'Musanze', 'Huye', 'Rubavu', 'Rusizi', 'Nyagatare', 'Other')),
    Address VARCHAR2(150),
    DistributionZone VARCHAR2(50) CHECK (DistributionZone IN ('Urban', 'Rural', 'Cross-border')),
    IsActive CHAR(1) DEFAULT 'Y' CHECK (IsActive IN ('Y', 'N')),
    DateRegistered DATE DEFAULT SYSDATE
);
CREATE TABLE Delivery (
    DeliveryID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DistributorID NUMBER NOT NULL,
    BatchID NUMBER NOT NULL,
    DeliveryDate DATE NOT NULL,
    QuantityDelivered NUMBER CHECK (QuantityDelivered > 0),
    DeliveryStatus VARCHAR2(20) DEFAULT 'Pending' CHECK (DeliveryStatus IN ('Pending', 'In Transit', 'Delivered', 'Cancelled')),
    VehiclePlate VARCHAR2(20),
    DriverName VARCHAR2(100),
    Notes VARCHAR2(200),
    CONSTRAINT fk_delivery_distributor FOREIGN KEY (DistributorID)
        REFERENCES Distributor(DistributorID),
    CONSTRAINT fk_delivery_batch FOREIGN KEY (BatchID)
        REFERENCES Batch(BatchID)
);
CREATE TABLE Invoice (
    InvoiceID NUMBER PRIMARY KEY,
    DistributorID NUMBER,
    InvoiceDate DATE,
    TotalAmount NUMBER(10,2),
    PaymentStatus VARCHAR2(20),
    
    CONSTRAINT fk_distributor
        FOREIGN KEY (DistributorID)
        REFERENCES Distributor(DistributorID)
        ON DELETE CASCADE
);
CREATE TABLE Payment (
    PaymentID NUMBER PRIMARY KEY,
    InvoiceID NUMBER,
    PaymentDate DATE,
    AmountPaid NUMBER(10,2),
    PaymentMethod VARCHAR2(50),
    
    CONSTRAINT fk_invoice
        FOREIGN KEY (InvoiceID)
        REFERENCES Invoice(InvoiceID)
        ON DELETE CASCADE
);
--product
INSERT INTO Product (ProductName, BeverageType, PackagingType, VolumeLiters, PricePerUnit, QuantityInStock, Category)
VALUES ('Sparkling Water', 'Water', 'Bottle', 0.50, 1.20, 500, 'Beverage');

INSERT INTO Product (ProductName, BeverageType, PackagingType, VolumeLiters, PricePerUnit, QuantityInStock, Category)
VALUES ('Orange Juice', 'Juice', 'Carton', 1.00, 2.50, 300, 'Juice Drink');

INSERT INTO Product (ProductName, BeverageType, PackagingType, VolumeLiters, PricePerUnit, QuantityInStock, Category)
VALUES ('Cola Classic', 'Soda', 'Can', 0.33, 1.80, 800, 'Soft Drink');

INSERT INTO Product (ProductName, BeverageType, PackagingType, VolumeLiters, PricePerUnit, QuantityInStock, Category)
VALUES ('Mango Smoothie', 'Juice', 'Bottle', 0.75, 3.00, 250, 'Smoothie');

INSERT INTO Product (ProductName, BeverageType, PackagingType, VolumeLiters, PricePerUnit, QuantityInStock, Category)
VALUES ('Mineral Water', 'Water', 'Bottle', 1.50, 1.00, 1000, 'Beverage');
SELECT COUNT(*) FROM Product;
SELECT * FROM Product;

-- distrubutor
INSERT INTO Distributor (DistributorName, ContactPerson, PhoneNumber, Email, Region, Address, DistributionZone, IsActive)
VALUES ('FreshMart Distributors', 'Alice Uwimana', '0789001111', 'info@freshmart.com', 'Kigali', 'KG 123 St, Kigali', 'Urban', 'Y');

INSERT INTO Distributor (DistributorName, ContactPerson, PhoneNumber, Email, Region, Address, DistributionZone, IsActive)
VALUES ('Sunrise Beverages Ltd', 'Jean Bosco', '0789222333', 'sales@sunrisebev.com', 'Huye', 'HU 45 Ave, Huye', 'Rural', 'Y');

INSERT INTO Distributor (DistributorName, ContactPerson, PhoneNumber, Email, Region, Address, DistributionZone, IsActive)
VALUES ('CoolDrinks Supply Co.', 'Catherine Mukamana', '0789444555', 'contact@cooldrinks.com', 'Musanze', 'MS 67 Road, Musanze', 'Urban', 'Y');

COMMIT;
SELECT * FROM Distributor;
-- Insert deliveries
INSERT INTO Delivery (DistributorID, BatchID, DeliveryDate, QuantityDelivered,
 DeliveryStatus, VehiclePlate, DriverName, Notes)
VALUES (1, 1, DATE '2025-10-01', 120, 'Delivered', 'RAB123A', 'Alice Uwimana',
 'On time delivery');

INSERT INTO Delivery (DistributorID, BatchID, DeliveryDate, QuantityDelivered, DeliveryStatus, VehiclePlate, DriverName, Notes)
VALUES (1, 2, DATE '2025-10-03', 80, 'Delivered', 'RAB124B', 'Jean Bosco', 'No issues');

INSERT INTO Delivery (DistributorID, BatchID, DeliveryDate, QuantityDelivered, DeliveryStatus, VehiclePlate, DriverName, Notes)
VALUES (1, 3, DATE '2025-10-05', 60, 'In Transit', 'RAB125C', 'Catherine Mukamana', 'Delayed due to traffic');

INSERT INTO Delivery (DistributorID, BatchID, DeliveryDate, QuantityDelivered, DeliveryStatus, VehiclePlate, DriverName, Notes)
VALUES (2, 4, DATE '2025-10-02', 100, 'Delivered', 'RAB126D', 'Eric Niyonsenga', 'Smooth delivery');

INSERT INTO Delivery (DistributorID, BatchID, DeliveryDate, QuantityDelivered, DeliveryStatus, VehiclePlate, DriverName, Notes)
VALUES (2, 5, DATE '2025-10-06', 150, 'Pending', 'RAB127E', 'Alice Uwimana', 'Awaiting confirmation');

INSERT INTO Delivery (DistributorID, BatchID, DeliveryDate, QuantityDelivered, DeliveryStatus, VehiclePlate, DriverName, Notes)
VALUES (3, 1, DATE '2025-10-04', 90, 'Delivered', 'RAB128F', 'Jean Bosco', 'On time');

INSERT INTO Delivery (DistributorID, BatchID, DeliveryDate, QuantityDelivered, DeliveryStatus, VehiclePlate, DriverName, Notes)
VALUES (3, 2, DATE '2025-10-07', 110, 'Delivered', 'RAB129G', 'Alice Uwimana', 'Smooth delivery');

INSERT INTO Delivery (DistributorID, BatchID, DeliveryDate, QuantityDelivered, DeliveryStatus, VehiclePlate, DriverName, Notes)
VALUES (3, 3, DATE '2025-10-09', 75, 'In Transit', 'RAB130H', 'Jean Bosco', 'Traffic delay');

-- Commit changes
COMMIT;

-- Check Batch table
SELECT * FROM Batch;

-- Check Delivery table
SELECT * FROM Delivery;
*update
1. Create Distributor table
CREATE TABLE Distributor (
    DistributorID NUMBER PRIMARY KEY,
    DistributorName VARCHAR2(50),
    Region VARCHAR2(30)
);

2. Create Invoice table
CREATE TABLE Invoice (
    InvoiceID NUMBER PRIMARY KEY,
    DistributorID NUMBER,
    InvoiceDate DATE,
    TotalAmount NUMBER(10,2),
    PaymentStatus VARCHAR2(20),
    CONSTRAINT FK_Invoice_Distributor FOREIGN KEY (DistributorID)
        REFERENCES Distributor(DistributorID)
);

 3. Insert sample distributors
INSERT INTO Distributor (DistributorID, DistributorName, Region)
VALUES (1, 'ABC Beverages', 'East');

INSERT INTO Distributor (DistributorID, DistributorName, Region)
VALUES (2, 'Fresh Drinks', 'West');

INSERT INTO Distributor (DistributorID, DistributorName, Region)
VALUES (3, 'Cool Beverages', 'North');

4. Insert sample invoices
INSERT INTO Invoice (InvoiceID, DistributorID, InvoiceDate, TotalAmount, PaymentStatus)
VALUES (101, 1, DATE '2025-10-01', 5000, 'Pending');

INSERT INTO Invoice (InvoiceID, DistributorID, InvoiceDate, TotalAmount, PaymentStatus)
VALUES (102, 2, DATE '2025-10-03', 3000, 'Completed');

INSERT INTO Invoice (InvoiceID, DistributorID, InvoiceDate, TotalAmount, PaymentStatus)
VALUES (103, 3, DATE '2025-10-05', 4500, 'Pending');

Commit changes
COMMIT;

Update invoice status after payment completion
UPDATE Invoice
SET PaymentStatus = 'Paid'
WHERE PaymentStatus = 'Completed';

COMMIT;

6. Select to view the output
SELECT i.InvoiceID, d.DistributorName, d.Region, i.TotalAmount, i.PaymentStatus
FROM Invoice i
JOIN Distributor d ON i.DistributorID = d.DistributorID
ORDER BY i.InvoiceID;






